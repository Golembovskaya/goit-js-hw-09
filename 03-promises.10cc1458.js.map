{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAnCWQ,SAASC,cAAc,SAC/BC,iBAAiB,UAC3B,SAAkBC,GAChBA,EAAMC,iBACN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAEtC,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAeH,OAAOH,EAAOI,OAEnC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAcC,GAAY,EAC3DxB,EAAcwB,EAAUL,GAEvBM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACnBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,OAC5D2B,QAAMC,IAAI,uBAAqB7B,QAAiBC,UAEnD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOK,QAAQ,sBAAoB/B,QAAiBC,OAC3D2B,QAAMC,IAAI,sBAAoB7B,QAAiBC,UAEhDiB,GAAcG","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formClass = document.querySelector('.form');\nformClass.addEventListener('submit', onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n\n  let delayFirst = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountNumber = Number(amount.value);\n\n  for (let position = 1; position <= amountNumber; position += 1) {\n    createPromise(position, delayFirst)\n    \n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });  \n     delayFirst += stepDelay;\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//import Notiflix from 'notiflix';\n//const formClass = document.querySelector('.form');\n//formClass.addEventListener('submit', onSubmit);\n//function onSubmit(event) {\n  //event.preventDefault();\n  //const { delay, step, amount } = event.currentTarget;\n\n  //let delayFirst = Number(delay.value);\n  //const stepDelay = Number(step.value);\n  //const amountNumber = Number(amount.value);\n\n  //for (let position = 1; position <= amountNumber; position += 1) {\n  //   createPromise(position, delayFirst);\n  //   delayFirst += stepDelay;\n  //}\n//};\n\n//function createPromise(position, delay) {\n  //const shouldResolve = Math.random() > 0.3;\n  \n  //const promise = new Promise((resolve, reject) => {\n  //  setTimeout(() => {\n  //    if (shouldResolve) {\n  //      resolve({ position, delay });\n  //    } else {\n  //      reject({ position, delay });\n  //    }\n   // }, delay);\n  //});\n\n//promise\n  //.then(({ position, delay }) => {\n   // Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n   // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n // })\n // .catch(({ position, delay }) => {\n  //  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n // });  \n//}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","delayFirst","Number","value","stepDelay","amountNumber","position1","then","$parcel$interopDefault","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.10cc1458.js.map"}